language: go
name: go_mysql_config_raw_passwd
message: "Do not hardcode MySQL passwords in the source code."
category: security
severity: critical
pattern: >
  [
    (composite_literal
  type: (qualified_type
    package: (package_identifier) @pkg
    name: (type_identifier) @type
    (#match? @pkg "^mysql$")
    (#match? @type "^Config$"))
  body: (literal_value
    (keyed_element
      (literal_element) @field
      (literal_element) @value
      (#match? @field "^Passwd$")
      (#match? @value "^\".*\"$")))) @go_mysql_config_raw_passwd
  ]
exclude:
  - "test/**"
  - "*_test.go"
  - "tests/**"
  - "__tests__/**"
description: |
  Hardcoding MySQL passwords in source code exposes sensitive information, 
  increasing the risk of unauthorized access, especially if the code is stored 
  in version control systems.

  Why this is a problem:
  - Compromised source code leads to database breaches.
  - Credentials in repositories can be scanned and exploited by attackers.

  Remediation Steps:
  1. Use environment variables to manage sensitive data:
     ```go
     import "os"

     config.Password = os.Getenv("MY_PASSWORD")
     ```
  2. Use a secure secret management service (e.g., HashiCorp Vault, AWS Secrets Manager).
  3. Ensure `.env` files and other sensitive configurations are excluded from version control via `.gitignore`.