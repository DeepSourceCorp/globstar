language: go
name: go_insecure_cookie
message: "Avoid using http.SetCookie to set cookies without the Secure flag to prevent insecure cookie handling."
category: security
severity: critical
pattern: >
  [
    (call_expression
      function: (selector_expression
        operand: (identifier) @http
        field: (field_identifier) @method
        (#match? @http "^http$")
        (#match? @method "^SetCookie$"))
      arguments: (argument_list
        (unary_expression
          (composite_literal
            (qualified_type
              package: (package_identifier) @pkg
              name: (type_identifier) @type
              (#match? @pkg "^http$")
              (#match? @type "^Cookie$"))
            (literal_value) @cookie_body
            (#not-match? @cookie_body ".*Secure.*true.*"))))) @go_insecure_cookie
  ]
exclude:  
  - "test/**"
  - "*_test.go"
  - "tests/**"
  - "__tests__/**"
description: |
  Issue:
  Cookies set without the `Secure` flag can be sent over unsecured HTTP connections, exposing sensitive information like session tokens to interception via Man-in-the-Middle (MitM) attacks.

  Impact:  
  - Exposes cookies to network sniffing over unsecured connections.  
  - Increases risk of session hijacking and user account compromise.  
  - Violates security best practices for handling sensitive cookies.  

  Vulnerable Example: 
  ```go
  http.SetCookie(w, &http.Cookie{
      Name:  "session_token",
      Value: "abc123",
      Path:  "/",
      //Missing Secure flag - cookie can be sent over HTTP
  })

  Remediation:
  Ensure that all cookies are set with the `Secure` flag to prevent them from being sent over unsecured connections.  
  ```go
  http.SetCookie(w, &http.Cookie{
      Name:   "session_token",
      Value:  "abc123",
      Secure: true, //Set Secure flag to true
    })