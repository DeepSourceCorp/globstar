language: ts
name: bypass_assertion
message: Found assertion being by passed, assign  directly to a typed varibale
category: security

pattern: |
  (
    (interface_declaration
      name : (type_identifier) @interface_name
    )
    (_)*
    (lexical_declaration
      (variable_declarator 
          value : (as_expression
              (type_identifier) @inter_name (#eq? @inter_name @interface_name)
            
            )
        ) 

    ) 
  ) @bypass_assertion

description: |
  Asserting an Object with Extra Properties (Unsafe Assertions)
  - Incorrect way :  ❌ Incorrect: Type assertion ignores extra properties
                  ```ts
                  const person = { name: "Alice", age: 30, extra: true } as Person;
                  ```
  - Correct way : ```ts
                const person : Person = { name: "Alice", age: 30, extra: true };
                ```
  Using Type Assertions to Bypass Type Checking
  - ❌ Incorrect: Forcing a type assertion with as when it's wrong
    - ```ts
      let value: unknown = "Hello";
      let num = value as number; // ❌ TypeScript allows, but it's incorrect at runtime
      console.log(num * 2); // ❌ Runtime error
      ```
  - ✅ Fix: Use proper type checking
    -```ts
      let value: unknown = "Hello";

      if (typeof value === "number") {
          let num: number = value; // ✅ Now TypeScript ensures it's correct
      }
      ```

